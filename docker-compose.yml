version: "3.9"

services:
  # RabbitMQ Message broker
  message-broker:
    image: rabbitmq:3-management-alpine
    container_name: message-broker
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 5

  #Database
  app-db:
    image: postgres
    container_name: app-db
    environment:
      POSTGRES_DB: "app-db"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
      POSTGRES_ROOT_PASSWORD: "password"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "app-db"]
      interval: 5s
      timeout: 5s
      retries: 20
    ports:
      - "5432:5432"
    volumes:
      - app-db-volume:/var/lib/mysql

  #Client app
  client:
    container_name: client-container
    build:
      dockerfile: ./Dockerfile
      context: ./client
    image: abeldlp/client
    env_file:
      - ./client/.env
    ports:
      - "3000:8080"
    depends_on:
      - api-service

  #Api gateway
  api-gateway:
    container_name: api-gateway-container
    build:
      dockerfile: ./Dockerfile
      context: ./api-gateway
    image: abeldlp/api-gateway
    env_file:
      - ./api-gateway/.env.docker
    ports:
      - "4444:8080"
    depends_on:
      - api-service

  #Api service
  api-service:
    container_name: api-service-container
    build:
      dockerfile: ./Dockerfile
      context: ./api-service
    env_file:
      - ./api-service/.env.docker
    image: abeldlp/api-service
    ports:
      - "8000:8000"
    depends_on:
      app-db:
        condition: service_healthy

  #Scheduler service
  scheduler-service:
    container_name: scheduler-service-container
    build:
      dockerfile: ./Dockerfile
      context: ./schedule-service
    env_file:
      - ./schedule-service/.env.docker
    image: abeldlp/scheduler-service
    depends_on:
      app-db:
        condition: service_healthy
      message-broker:
        condition: service_healthy

volumes:
  app-db-volume:
